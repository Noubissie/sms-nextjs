generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Classes {
  id           Int            @id
  class        String         @unique
  sectionId    Int
  Section      Section        @relation(fields: [sectionId], references: [id_])
  ClassSubject ClassSubject[]

  @@index([sectionId], name: "sectionId")
}

model ClassSubject {
  id                 Int      @id
  classId            Int
  subjectId          Int
  subjectCoefficient Int
  Classes            Classes  @relation(fields: [classId], references: [id])
  Subjects           Subjects @relation(fields: [subjectId], references: [id])

  @@index([classId], name: "classId")
  @@index([subjectId], name: "subjectId")
}

model Gender {
  id             Int              @id @default(autoincrement())
  gender         String           @unique
  ParentProfile  ParentProfile[]
  StaffProfile   StaffProfile[]
  StudentProfile StudentProfile[]
}

model ParentProfile {
  id          Int     @id
  firstname   String?
  lastname    String?
  age         Int
  gender      Int
  email       String? @unique
  parentTitle Int
  phoneNumber String?
  Gender      Gender  @relation(fields: [gender], references: [id])
  Title       Title   @relation(fields: [parentTitle], references: [id])

  @@index([gender], name: "gender")
  @@index([parentTitle], name: "parentTitle")
}

model Section {
  id_       Int        @id
  section   String     @unique
  languages String?
  Classes   Classes[]
  Subjects  Subjects[]
}

model StaffProfile {
  id                      Int           @id @default(autoincrement())
  firstname               String?
  lastname                String?
  staffTitle              Int
  gradeID                 Int
  matricle                String?       @unique
  staffID                 String        @unique
  formerPost              String?
  locationOfFomerPost     String?
  decisionNo              String?
  decisionDate            DateTime?
  diploma                 String?
  speciality              Int
  dateofbirth             DateTime?
  dateOfAssumption        DateTime      @default(now())
  gender                  Int
  email                   String?       @unique
  phoneNumber             String?
  imagepath               String
  shortbiography          String
  teacherAddress          String?
  religion                String
  bloodgroup              String
  positionID              Int
  emergencyContactName    String?
  emergencyContactPhone   String?
  EcontactOccupation      String?
  emergencyContactEmail   String?
  emergencyContactAddress String?
  Gender                  Gender        @relation(fields: [gender], references: [id])
  staffgrade              staffgrade    @relation(fields: [gradeID], references: [id])
  staffPosition           staffPosition @relation(fields: [positionID], references: [id])
  Subjects                Subjects      @relation(fields: [speciality], references: [id])
  Title                   Title         @relation(fields: [staffTitle], references: [id])

  @@index([gender], name: "gender")
  @@index([gradeID], name: "gradeID")
  @@index([positionID], name: "positionID")
  @@index([speciality], name: "speciality")
  @@index([staffTitle], name: "staffTitle")
}

model StudentProfile {
  id               Int       @id @default(autoincrement())
  familyname       String
  givenname        String
  dateofbirth      DateTime?
  gender           Int
  dateOfEnrollment DateTime  @default(now())
  religion         String
  bloodgroup       String
  email            String    @unique
  AdmissionID      String    @unique
  phonenumber      String?
  StudentAddress   String?
  shortbiography   String
  studentPicture   String
  FatherName       String?
  FatherOccupation String?
  FatherAddress    String?
  FatherContact    String?
  MotherName       String?
  MotherOccupation String?
  MotherAddress    String?
  MotherContact    String?
  Gender           Gender    @relation(fields: [gender], references: [id])

  @@index([gender], name: "gender")
}

model Subjects {
  id           Int            @id
  subject      String?
  sectionId    Int?
  Section      Section?       @relation(fields: [sectionId], references: [id_])
  ClassSubject ClassSubject[]
  StaffProfile StaffProfile[]

  @@index([sectionId], name: "sectionId")
}

model Title {
  id            Int             @id @default(autoincrement())
  title         String          @unique
  ParentProfile ParentProfile[]
  StaffProfile  StaffProfile[]
}

model staffgrade {
  id           Int            @id @default(autoincrement())
  grade        String         @unique
  StaffProfile StaffProfile[]
}

model staffPosition {
  id           Int            @id @default(autoincrement())
  position     String         @unique
  StaffProfile StaffProfile[]
}
